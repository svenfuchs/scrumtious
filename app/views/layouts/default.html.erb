<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
       "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
  <meta http-equiv="content-type" content="text/html;charset=UTF-8" />
  <title><%= controller.controller_name.titleize %>: <%= controller.action_name %></title>
  <%= stylesheet_link_tag 'scaffold', 'scrummy', :cache => true %>
  <%= javascript_include_tag 'jquery-1.2.6.min', 'jquery.jeditable.mini', 'jquery.tablednd_0_5.js', :cache => true %>
  
  <style>
    #tickets .collapse {
      display: none;
    }
    #main th.collapse-days {
      padding: 0px;
    }
    a.toggle-days {
      position: relative;
      display: block;
      width: 100%;
      height: 100%;
      padding: 2px 1px;
      font-style: normal;
      font-weight: bold;
    }
  </style>

  <script>
    // http://ejohn.org/blog/qualified-selectors-in-jquery
    jQuery.parse.push(/^\s*(<)(\s*)(.*)$/);
    jQuery.expr["<"] = jQuery.expr[":"].has;  
  
    var authenticity_token = '<%= form_authenticity_token %>';
    
    function id_from_dom(element) {
      return element.parentNode.id.split('-')[1];
    }
    
    function json_value(str, key) {
      eval("var value = " + str + "[" + key + "]");
      return value;
    }
    
    function update_resource_attribute(type, id, name, value) {
      var params = { '_method': 'put', 'authenticity_token': authenticity_token };
      params[type + "[" + name + "]"] = value;
      $.post("/" + type + "s/" + id + ".xml", params);
    }
    
    update_release = function(release_id, settings) {
      update_resource_attribute('ticket', id_from_dom(this), 'release_id', release_id);
      return '<a href="/releases/' + release_id + '">' + json_value(settings.data, release_id) + '</a>';
    }
    
    update_sprint = function(sprint_id, settings) {
      update_resource_attribute('ticket', id_from_dom(this), 'sprint_id', sprint_id);
      return '<a href="/sprints/' + sprint_id + '">' + json_value(settings.data, sprint_id) + '</a>';
    }
    
    update_assigned_user = function(user_id, settings) {
      update_resource_attribute('ticket', id_from_dom(this), 'user_id', user_id);
      return json_value(settings.data, user_id);
    }
    
    update_estimated = function(estimated, settings) {
      update_resource_attribute('ticket', id_from_dom(this), 'estimated', estimated);
      return estimated;
    }
    
    update_scheduled_hours = function(hours, settings) {
      var tokens = this.id.split('-');
      var user_id = tokens[1];
      var day = tokens.slice(2, 5).join('-');
      var params = { '_method': 'put', 'authenticity_token': authenticity_token, user_id: user_id, hours: hours };
      $.post("/schedule/" + day + ".xml", params);
      return hours;
    }
    
    can_drop_ticket = function(drag, drop) {
      return drop.id || (drop.className == "empty") ;
    }

    drop_ticket = function(table, row) {
      update_empty_components(table);
      table_sort_order(table);
      var id = row.id.split('-')[1];
      var component_id = row.parentNode.id.split('-')[1];
      params = { 
        '_method': 'put', 
        'authenticity_token': authenticity_token
      }
      params['tickets[' + id + '][component_id]'] = component_id;
      $.extend(params, table_sort_order(table));
      $.post("/tickets", params);
    }
    
    function update_empty_components(table) {
      $("tbody", table).each(function(){
        if($('tr[class!=empty] < td', this).length > 0) {
          $('tr', this).remove('.empty');
        } else if($('tr.empty', this).length == 0) {
          $(this).append('<tr class="empty"><td colspan="6">empty</td></tr>');
        }
      });
    }
    
    function table_sort_order(table) {
      var ids = $.map(table.rows, function(row){
        if(row.id){ return row.id.split('-')[1] }
      });
      var order = {};
      for(var i = 0; i < ids.length; i++) {
        order['tickets[' + ids[i] + '][priority]'] = i;
      }
      return order;
    }

    var collapsable_day_cells = Array();
    var collapse_day_columns = true;
    
    function init_collapse_day_columns() {
      var table = $('#tickets');
      var days_count = $('th.day').length;
      if (days_count > 7) {
        collect_days = function(i, e){ collapsable_day_cells.unshift(e) }
        
        $('#tickets th.day').slice(0, days_count - 7).each(collect_days);
        $('#tickets tr').each(function(ix, tr) {
          $('td.day', tr).slice(0, days_count - 7).each(collect_days);
        });
        collapsable_day_cells = $(collapsable_day_cells);
      
        update_collapse_days_link();
      }
    }
    
    function toggle_collapse_day_columns() {
      collapse_day_columns = !collapse_day_columns;      
      
      collapsable_day_cells.each(function(i, element) {
        collapse_day_columns ? $(element).hide() : $(element).show();
      });
      
      update_collapse_days_link();
    }

    function update_collapse_days_link() {
      $('th.collapse-days a').remove();      
      if(collapse_day_columns) {
        $('th.collapse-days').append('<a href="#" id="expand-days" class="toggle-days">«</a>');
      } else {
        $('th.collapse-days').append('<a href="#" id="collapse-days" class="toggle-days">»</a>');
      }
      $('th.collapse-days a').click(toggle_collapse_day_columns);
    }
    

    $(document).ready(function () {
      $("#flash").animate({opacity: 1.0}, 3000).fadeOut(1000);
      $("#tickets tbody .estimated").editable(update_estimated, { cssclass: "inline-edit" });
      $("#tickets .release").editable(update_release, { data: '<%= release_select_data_json %>', type: 'select', submit: 'OK', event: 'click', cssclass: 'inline-select' });
      $("#tickets .sprint").editable(update_sprint, { data: '<%= sprint_select_data_json %>', type: 'select', submit: 'OK', event: 'click', cssclass: 'inline-select' });
      $("#tickets .assigned").editable(update_assigned_user, { data: '<%= user_select_data_json %>', type: 'select', submit: 'OK', event: 'click', cssclass: 'inline-select' });
      $("#schedule .scheduled_hours").editable(update_scheduled_hours, { cssclass: 'inline-edit' });
      $("#tickets.project").tableDnD({ onDrop: drop_ticket, onAllowDrop: can_drop_ticket, onDragClass: 'dragging', dragHandle: 'ticket' });
      $("#tickets a").click(function(e){ e.stopPropagation(); });
      init_collapse_day_columns();
    });
  </script>

</head>
<body>
<div id="header">
  <%= render :partial => 'projects/member_select' %>
</div>
<%= render :partial => 'layouts/flash', :locals => {:flash => flash} %>

<div id="sidebar">
  <%= render :partial => 'activities/list', :locals => {:activities => activities} %>
</div>

<div id="main">
  <%= yield  %>
</div>

<div id="footer">
  adva-cms:
  <a href="http://artweb-design.lighthouseapp.com/projects/13992/tickets/new">new ticket</a> &middot;
  <a href="http://artweb-design.lighthouseapp.com/projects/13992/tickets?q=all&filter=all">all tickets</a> &middot;
  Scrumtious:
  <a href="http://artweb-design.lighthouseapp.com/projects/17856/tickets/new">new ticket</a> &middot;
  <a href="http://artweb-design.lighthouseapp.com/projects/17856/tickets?q=all&filter=all">all tickets</a>
</div>


</body>
</html>
